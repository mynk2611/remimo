
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
id                    Int     @id @default(autoincrement())
name                  String?  
email                 String?  @unique
number                String  @unique
password              String  
balance               Balance[]
onRamp                OnRamp[]
sentTransaction       Transaction[]  @relation(name: "FromUserRelation")
receivedTransaction   Transaction[]  @relation(name: "ToUserRelation")
}

model Merchant {
id        Int   @id @default(autoincrement())
email     String @unique
name      String?
auth_Type AuthType
}

model Balance {
  id      Int     @id @default(autoincrement())
  userId  Int @unique
  amount  Int
  locked  Int
  user    User   @relation(fields: [userId], references: [id])
}

model OnRamp {
id     Int     @id @default(autoincrement())
userId Int 
user   User   @relation(fields: [userId], references: [id])
provider String
status   onrampStatus
startDate DateTime
token    String  @unique
amount   Int
}

model Transaction {
  id              Int   @id  @default(autoincrement())
  amount          Int
  type            transactionType
  fromUserId      Int
  toUserId        Int
  fromUser        User @relation(name: "FromUserRelation", fields: [fromUserId] , references: [id])  
  toUser          User @relation(name: "ToUserRelation",fields: [toUserId], references: [id])
  startDate       DateTime
  status          transactionStatus
  remark          String?
}

enum AuthType {
  Google
  Github
}

enum onrampStatus {
  pending
  success
  failure
}

enum transactionStatus {
  success
  failure
}

enum transactionType {
  Credit
  Debit
}